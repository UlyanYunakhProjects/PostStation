@page "/developers"

@inject NavigationManager NavigationManager
@inject IHttpClientFactory _clientFactory

<a class="btn btn-outline-primary" @onclick="ToForm">Добавить</a>

@if (developers == null)
{
    <div class="d-flex justify-content-center mt-3">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Загрузка...</span>
        </div>
    </div>
}
else
{
    <div class="d-flex flex-wrap">
        @foreach (Developer developer in developers)
        {  
            <div class="p-2 m-2 bg-primary text-white rounded d-flex align-items-center">
                <p class="m-0">
                    @developer.Name
                    @if (developer.Country != null)
                    {
                        @: | @developer.Country.Name

                    }
                </p>
                <a class="btn p-1" @onclick="() => ToForm(developer.Id)">
                    <i class="bi-pencil text-white"></i>
                </a>
                <a class="btn p-1" @onclick="() => Delete(developer.Id)">
                    <i class="bi-x text-white"></i>
                </a>
            </div>
        }
    </div>
}

@code {
    private List<Developer> developers;

    private async Task UpdateList()
    {
        var client = _clientFactory.CreateClient("poststation");
        var responce = await client.GetAsync("api/developers");

        if(responce.IsSuccessStatusCode)
        {
            developers = JsonConvert
                .DeserializeObject<List<Developer>>(
                    responce.Content.ReadAsStringAsync().Result
                );
        }
    }

    protected override async Task OnInitializedAsync() => await UpdateList();
    
    private void ToForm() => NavigationManager.NavigateTo("add/developers");
    
    private void ToForm(int id) => NavigationManager.NavigateTo($"edit/developers/{id}");
    
    private async void Delete(int id)
    {
        var client = _clientFactory.CreateClient("poststation");
        var responce = await client.DeleteAsync($"api/developers/{id}");

        if(responce.IsSuccessStatusCode)
        {
            await UpdateList();
            this.StateHasChanged();
        }
    }
}